// Generated by CoffeeScript 1.7.1
var EditView,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EditView = (function(_super) {
  __extends(EditView, _super);

  function EditView() {
    return EditView.__super__.constructor.apply(this, arguments);
  }

  EditView.prototype.el = "#content";

  EditView.prototype.events = $.extend({
    "click button": "onButtonClick"
  }, Backbone.EditView.prototype.events);

  EditView.prototype.onButtonClick = function() {
    return console.log("Button clicked");
  };

  EditView.prototype.initialize = function(options) {
    this.model = new Backbone.Model({
      id: "1234",
      name: "Click to edit me"
    });
    this.model.url = "test";
    return this.models = new Backbone.Collection([this.model]);
  };

  EditView.prototype.render = function() {
    return this.$el.html("" + (this.getEditable(this.model, {
      key: 'name',
      escape: true
    }, 'Name', 'Untitled agent')) + " <button>A button</button>");
  };

  return EditView;

})(Backbone.EditView);

$(function() {
  return (new EditView).render();
});
